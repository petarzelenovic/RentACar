/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.confirmation;

import controller.ClientController;
import domain.Car;
import domain.Client;
import domain.Confirmation;
import domain.PriceListItem;
import domain.User;
import enumerations.Category;
import enumerations.TypeOfPayment;
import java.awt.Frame;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import models.TableModelAutomobil;

/**
 *
 * @author Petar
 */
public class IzmenaPotvrdeForm extends javax.swing.JDialog {
    
    Confirmation potvrda;
    PriceListItem stavkaCenovnika = null;

    /**
     * Creates new form DodajPotvrduForm
     */
    public IzmenaPotvrdeForm(PotvrdeForm parent, boolean modal, Confirmation potvrda1) {
        super(parent, modal);
        try {
            initComponents();
            setLocationRelativeTo(null);
            this.potvrda = potvrda1;
//        System.out.println(potvrda.getClient());
            jTable1.setModel(new TableModelAutomobil());
            Client klijent;
            
            klijent = ClientController.getInstance().getClient(potvrda.getClient());
            System.out.println(klijent);
            
            prepareView();
            jSpinner1.setModel(new SpinnerNumberModel(1, 1, 12, 1));
            int index=0;
            ArrayList<Client> clients = ClientController.getInstance().getAllClient();
            for (int i = 0; i < clients.size(); i++) {
                if(clients.get(i).getClientID().equals(klijent.getClientID())){
                    index=i;
                    break;
                }
            }
            
            jComboClient.setSelectedIndex(index);
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            jFormattedDatumOd.setText(String.valueOf(sdf.format(potvrda.getDateFrom())));
            jFormattedDatumDo.setText(String.valueOf(sdf.format(potvrda.getDateTo())));
        } catch (Exception ex) {
            Logger.getLogger(IzmenaPotvrdeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jFormattedDatumOd = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jFormattedDatumDo = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextPrice = new javax.swing.JTextField();
        jComboClient = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jTextFilter = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jFormattedText = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextPriceListItem = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Izmena potvrde o rentu");

        jLabel1.setText("Datum od (dd.MM.yyyy):");

        jFormattedDatumOd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));

        jLabel2.setText("Datum do (dd.MM.yyyy):");

        jFormattedDatumDo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));

        jLabel3.setText("Konacna cena:");

        jTextPrice.setEditable(false);

        jLabel5.setText("Klijent:");

        jLabel7.setText("Cenovnik:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Raspolozivi automobili"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel8.setText("Brend:");

        jTextFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFilterKeyReleased(evt);
            }
        });

        jLabel4.setText("Registracija:");

        try {
            jFormattedText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UU-###-UU")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFilter)
                    .addComponent(jFormattedText, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
                .addGap(205, 205, 205))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jFormattedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jButton1.setText("Pogledaj cenovnike");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Izmeni");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextPriceListItem.setEditable(false);

        jLabel6.setText("Broj sati");

        jButton3.setText("Izracunaj cenu");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jComboClient, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jFormattedDatumOd))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFormattedDatumDo)
                            .addComponent(jTextPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextPriceListItem)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(184, 184, 184))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jFormattedDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jFormattedDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextPriceListItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton2)
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        PregledCenovnikaUpdateForm forma = new PregledCenovnikaUpdateForm(this, true, potvrda.getPriceListItem());
        forma.setVisible(true);
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            if (jFormattedDatumDo.getText().isEmpty() || jFormattedDatumOd.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Popunite datume!");
                return;
            }
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            Date dateFrom = sdf.parse(jFormattedDatumOd.getText());
            Date dateTo = sdf.parse(jFormattedDatumDo.getText());
            long razlikaIzmedjuDana = (dateTo.getTime() - dateFrom.getTime());
            long razlika = (razlikaIzmedjuDana / (1000 * 60 * 60 * 24)) % 365;
            if (stavkaCenovnika == null) {
                JOptionPane.showMessageDialog(this, "Odaberite cenovnik");
                return;
            }
            if (stavkaCenovnika.getPayingPer().equals(TypeOfPayment.HOURLY)) {
                double konacnaCena = Double.parseDouble(String.valueOf(jSpinner1.getValue())) * stavkaCenovnika.getPrice();
                jTextPrice.setText(String.valueOf(konacnaCena));
            }
            if (stavkaCenovnika.getPayingPer().equals(TypeOfPayment.DAILY)) {
                
                double konacnaCena = stavkaCenovnika.getPrice() * razlika;
                jTextPrice.setText(String.valueOf(konacnaCena));
            }
        } catch (ParseException ex) {
            Logger.getLogger(IzmenaPotvrdeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Confirmation potvrda2;
            if (jFormattedDatumDo.getText().isEmpty() || jFormattedDatumOd.getText().isEmpty() || jTextPriceListItem.getText().isEmpty() || jTextPrice.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Sva polja su obavezna!");
                return;
            }
            int row = jTable1.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Odaberite automobil!");
                return;
            }
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            Date dateFrom = sdf.parse(jFormattedDatumOd.getText());
            Date dateTo = sdf.parse(jFormattedDatumDo.getText());
            if (dateFrom.before(new Date())) {
                JOptionPane.showMessageDialog(this, "Datum od mora biti nakon danasnjeg dana");
                return;
            }
            
            if (!dateFrom.before(dateTo)) {
                JOptionPane.showMessageDialog(this, "Datum od mora biti pre datuma do");
                return;
            }
            
            TableModelAutomobil mt = (TableModelAutomobil) jTable1.getModel();
            Car car = mt.vratiAutomobil(row);
            double rentPrice = Double.parseDouble(jTextPrice.getText());
            Client client = (Client) jComboClient.getSelectedItem();
            if (stavkaCenovnika != null) {
                potvrda2 = new Confirmation(potvrda.getConfirmationID(), dateFrom, dateTo, rentPrice, stavkaCenovnika.getCategory(), potvrda.getCar(), client, stavkaCenovnika, null);
            } else {
                potvrda2 = new Confirmation(potvrda.getConfirmationID(), dateFrom, dateTo, rentPrice, potvrda.getPriceListItem().getCategory(), potvrda.getCar(), client, potvrda.getPriceListItem(), null);
            }
            
            try {
                ClientController.getInstance().updateConfirmation(potvrda2);
                JOptionPane.showMessageDialog(this, "Uspesno updateovana potvrda!");
                this.dispose();
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
                jTextPrice.setText("");
                jTextPriceListItem.setText("");
//                Logger.getLogger(DodajPotvrduForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            jTextPrice.setText("");
            jTextPriceListItem.setText("");

//            Logger.getLogger(DodajPotvrduForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFilterKeyReleased
        // TODO add your handling code here:
        String parametarBrand = jTextFilter.getText().trim();
        TableModelAutomobil mt = (TableModelAutomobil) jTable1.getModel();
        mt.setParametarBrand(parametarBrand);
        mt.refreshTabele();
    }//GEN-LAST:event_jTextFilterKeyReleased

    private void jFormattedTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextKeyReleased
        // TODO add your handling code here:

        TableModelAutomobil mt = (TableModelAutomobil) jTable1.getModel();
        String parametar = jFormattedText.getText();
        
        mt.setParametar(parametar);
        mt.refreshTabele();
    }//GEN-LAST:event_jFormattedTextKeyReleased

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboClient;
    private javax.swing.JFormattedTextField jFormattedDatumDo;
    private javax.swing.JFormattedTextField jFormattedDatumOd;
    private javax.swing.JFormattedTextField jFormattedText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFilter;
    private javax.swing.JTextField jTextPrice;
    private javax.swing.JTextField jTextPriceListItem;
    // End of variables declaration//GEN-END:variables

    public void prepareView() {
        try {
            ArrayList<Car> cars = ClientController.getInstance().getAllCar();
            ArrayList<Client> clients = ClientController.getInstance().getAllClient();
            
            for (Client client : clients) {
                jComboClient.addItem(client);
            }
        } catch (Exception ex) {
            Logger.getLogger(IzmenaPotvrdeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void setStavkaCenovnika(PriceListItem stavkaCenovnika1) {
        this.stavkaCenovnika = stavkaCenovnika1;
        jTextPriceListItem.setText(stavkaCenovnika.toString());
        
    }
}
