/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.pricelist;

import controller.ClientController;
import domain.PriceList;
import domain.PriceListItem;
import domain.User;
import enumerations.Category;
import enumerations.Currency;
import enumerations.TypeOfPayment;
import java.awt.Frame;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import models.TableModelStavkaCenovnika;

/**
 *
 * @author Petar
 */
public class DodajCenovnikForm extends javax.swing.JDialog {

    User user;

    /**
     * Creates new form DodajCenovnikForma
     */
    public DodajCenovnikForm(Frame parent, boolean modal, User ulogovani) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        user = ulogovani;
        jTable1.setModel(new TableModelStavkaCenovnika());
        prepareView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jFormattedDatumDo = new javax.swing.JFormattedTextField();
        jFormattedDatumOd = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboPayingPer = new javax.swing.JComboBox();
        jComboCurrency = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jComboCategory = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pravljenje cenovnika");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("Dodaj cenovnik");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cenovnik"));

        jLabel2.setText("Datum do (dd.MM.yyyy):");

        jFormattedDatumOd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));

        jLabel1.setText("Datum od (dd.MM.yyyy):");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedDatumOd))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jFormattedDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jFormattedDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(164, 164, 164))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Stavke cenovnika"));

        jButton1.setText("Dodaj stavku cenovnika");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Price:");

        jLabel4.setText("Paying per:");

        jLabel6.setText("Currency:");

        jLabel7.setText("Category:");

        jComboCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboCategoryItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(74, 74, 74)
                            .addComponent(jComboCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboPayingPer, 0, 196, Short.MAX_VALUE)
                            .addComponent(jComboCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 55, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboPayingPer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jComboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jButton2.setText("Obrisi stavku cenovnika");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try {

            // TODO add your handling code here:
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            if (jFormattedDatumDo.getText().isEmpty() || jFormattedDatumOd.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Unesite datume!");
                return;
            }
            Date datumOd = sdf.parse(jFormattedDatumOd.getText());
            Date datumDo = sdf.parse(jFormattedDatumDo.getText());
            Date danasnji = new Date();
            if (danasnji.after(datumOd)) {
                JOptionPane.showMessageDialog(this, "Unesite datum od posle danasnjeg dana!");
                return;
            }
            if (datumOd.after(datumDo)) {
                JOptionPane.showMessageDialog(this, "Datum od mora biti pre datuma do!");
                return;
            }

            TableModelStavkaCenovnika mt = (TableModelStavkaCenovnika) jTable1.getModel();
            ArrayList<PriceListItem> lista = mt.vratiListu();

            if (lista.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Morate uneti stavke liste!");
                return;
            }
            if (lista.size() != 8) {
                JOptionPane.showMessageDialog(this, "Potrebno je uneti cene za sve kategorije");
                return;
            }
            PriceList priceList = new PriceList(-1l, datumOd, datumDo, user, lista);

            try {
                ClientController.getInstance().addPriceList(priceList);
                JOptionPane.showMessageDialog(this, "Uspesno ubacen cenovnik!");
                this.dispose();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
//                    Logger.getLogger(DodajCenovnikForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
//                Logger.getLogger(DodajCenovnikForm.class.getName()).log(Level.SEVERE, null,ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTextPrice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Unesite cenu za kategoriju!");
            return;
        }
        double price = Double.parseDouble(jTextPrice.getText().trim());
        double total = 0;

        Category category = (Category) jComboCategory.getSelectedItem();
        TypeOfPayment payingPer = (TypeOfPayment) jComboPayingPer.getSelectedItem();
        Currency currency = (Currency) jComboCurrency.getSelectedItem();
//        if (jComboCategory.getSelectedItem() != null) {
//            if (jComboCategory.getSelectedItem().equals(Category.A)) {
//
//                if (!jTextPrice.getText().isEmpty()) {
//                    price = Double.parseDouble(jTextPrice.getText().trim());
//                    total = price * 1.6;
//                    jTextTotal.setText(String.valueOf(total));
//                }
//
//            } else if (jComboCategory.getSelectedItem().equals(Category.B)) {
//                if (!jTextPrice.getText().isEmpty()) {
//                    price = Double.parseDouble(jTextPrice.getText().trim());
//                    total = price * 1.5;
//                    jTextTotal.setText(String.valueOf(total));
//                }
//
//            } else if (jComboCategory.getSelectedItem().equals(Category.C)) {
//                if (!jTextPrice.getText().isEmpty()) {
//                    price = Double.parseDouble(jTextPrice.getText().trim());
//                    total = price * 1.3;
//                    jTextTotal.setText(String.valueOf(total));
//                }
//
//            } else if (jComboCategory.getSelectedItem().equals(Category.D)) {
//                if (!jTextPrice.getText().isEmpty()) {
//                    price = Double.parseDouble(jTextPrice.getText().trim());
//                    total = price * 1.2;
//                    jTextTotal.setText(String.valueOf(total));
//                }
//
//            }
//        }
        TableModelStavkaCenovnika mt = (TableModelStavkaCenovnika) jTable1.getModel();

        PriceListItem stavka = new PriceListItem(-1l, null, price, currency, payingPer, category);
        if (mt.postojiStavka(stavka)) {
            JOptionPane.showMessageDialog(this, "Vec postoji cena za ovu klasu vozila sa tim tipom placanja!");
            return;
        }
        mt.dodajUListu(stavka);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Odaberite red!");
            return;
        }
        TableModelStavkaCenovnika mt = (TableModelStavkaCenovnika) jTable1.getModel();
        mt.obrisiRed(row);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboCategoryItemStateChanged
        // TODO add your handling code here:
//        if (jComboCategory.getSelectedItem() != null) {
//            if (jComboCategory.getSelectedItem().equals(Category.A)) {
//
//                if (!jTextPrice.getText().isEmpty()) {
//                    double price = Double.parseDouble(jTextPrice.getText().trim());
//                    double total = price * 1.6;
//                    jTextTotal.setText(String.valueOf(total));
//                }
//
//            } else if (jComboCategory.getSelectedItem().equals(Category.B)) {
//                if (!jTextPrice.getText().isEmpty()) {
//                    double price = Double.parseDouble(jTextPrice.getText().trim());
//                    double total = price * 1.5;
//                    jTextTotal.setText(String.valueOf(total));
//                }
//
//            } else if (jComboCategory.getSelectedItem().equals(Category.C)) {
//                if (!jTextPrice.getText().isEmpty()) {
//                    double price = Double.parseDouble(jTextPrice.getText().trim());
//                    double total = price * 1.3;
//                    jTextTotal.setText(String.valueOf(total));
//                }
//
//            } else if (jComboCategory.getSelectedItem().equals(Category.D)) {
//                if (!jTextPrice.getText().isEmpty()) {
//                    double price = Double.parseDouble(jTextPrice.getText().trim());
//                    double total = price * 1.2;
//                    jTextTotal.setText(String.valueOf(total));
//                }
//
//            }
//        }
    }//GEN-LAST:event_jComboCategoryItemStateChanged

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboCategory;
    private javax.swing.JComboBox jComboCurrency;
    private javax.swing.JComboBox jComboPayingPer;
    private javax.swing.JFormattedTextField jFormattedDatumDo;
    private javax.swing.JFormattedTextField jFormattedDatumOd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextPrice;
    // End of variables declaration//GEN-END:variables

    private void prepareView() {

        for (Currency c : Currency.values()) {
            jComboCurrency.addItem(c);
        }

        for (TypeOfPayment t : TypeOfPayment.values()) {
            jComboPayingPer.addItem(t);
        }

        for (Category cat : Category.values()) {
            jComboCategory.addItem(cat);
        }
    }
}
